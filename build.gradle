// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'org.robolectric:robolectric-gradle-plugin:1.0.1'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6"
    }
}

apply from: 'dependencies.gradle'

allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'

    project.version = "0.13"

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkDir = properties.getProperty('sdk.dir')

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven { url "${sdkDir}/extras/android/m2repository" }
    }

    jacoco {
        toolVersion = "0.7.1.201405082137"
        reportsDir = file("${projectDir}/build/reports/jacoco")
    }

    def coverageSourceDirs = [
            'src/main/java',
            'src/main/aidl'
    ]

    task jacocoTestReportcus(type: JacocoReport, dependsOn: ["testDebug", "assembleDebugAndroidTest"]) {
        group = "Reporting"
        description = "Generate Jacoco coverage reports after running tests."
        reports {
            xml.enabled = true
            html.enabled = true
        }
        classDirectories = fileTree(
                dir: './build/intermediates/classes/debug',
                excludes: ['**/R*.class',
                           '**/*$InjectAdapter.class',
                           '**/*$ModuleAdapter.class',
                           '**/*$ViewInjector*.class',
                           '**/Dagger*.class',
                           '**/*_Members*.class',
                           '**/*_Get*.class',
                           '**/*_Provide*.class',
                           '**/*_Factory*.class'
                ])
        sourceDirectories = files(coverageSourceDirs)
        executionData = files("$buildDir/jacoco/testDebug.exec")
        // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
        // We iterate through the compiled .class tree and rename $$ to $.
        doFirst {
            new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
                if (file.name.contains('$$')) {
                    file.renameTo(file.path.replace('$$', '$'))
                }
            }
        }
    }
}



defaultTasks ':themeable:uploadArchives', 'themeableprocessor:uploadArchives'
