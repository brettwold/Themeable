apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'org.robolectric'
apply plugin: 'jacoco'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "themeable.sample"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    dexOptions {
        jumboMode true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile domainDependencies.annotations
    compile presentationDependencies.appCompat
    compile presentationDependencies.butterKnife
    compile project(':themeable')

    apt project(':themeableprocessor')

    testCompile testDependencies.hamcrestCore
    testCompile testDependencies.hamcrestInt
    testCompile testDependencies.hamcrestLib
    testCompile testDependencies.junit
    testCompile testDependencies.mockito
    testCompile testDependencies.robolectric

    androidTestCompile configurations.testCompile.dependencies
}


jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("${projectDir}/build/reports/jacoco")
}

def coverageSourceDirs = [
        'src/main/java',
        'src/main/aidl'
]

task jacocoTestReport(type: JacocoReport, dependsOn: ["testDebug", "assembleDebugAndroidTest"]) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R*.class',
                       '**/*$InjectAdapter.class',
                       '**/*$ModuleAdapter.class',
                       '**/*$ViewInjector*.class',
                       '**/Dagger*.class',
                       '**/*_Members*.class',
                       '**/*_Get*.class',
                       '**/*_Provide*.class',
                       '**/*_Factory*.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDebug.exec")
    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'Themeable'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/brettwold/Themeable.git'
        version {
            name = "${project.version}"
            desc = 'Themeable initial alpha release'
            released  = new Date()
            vcsTag = 'v0.1'
        }
    }
}

